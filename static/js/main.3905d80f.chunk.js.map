{"version":3,"sources":["components/AddDepModal.js","components/Edit.js","components/Get.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["AddDepModal","props","event","preventDefault","url","Object","keys","target","key","console","log","name","value","fetch","method","headers","body","JSON","stringify","maNv","hoTen","danToc","gioiTinh","diaChi","ngaySinh","soDT","maCv","maPb","bacLuong","then","res","json","result","alert","error","Modal","this","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","className","Row","Col","sm","Form","onSubmit","handleSubmit","Group","controlID","Control","type","required","placeholder","Button","variant","Footer","onClick","onHide","Component","Edit","disabled","defaultValue","depmaNv","dephoTen","depdanToc","depgioiTinh","depdiaChi","depngaySinh","requireddefaultValue","depsoDT","depmaCv","depmaPb","depbacLuong","Get","state","deps","addModalShow","editModalShow","refreshList","response","data","setState","window","confirm","editModalClose","Table","striped","bordered","hover","map","dep","MaNv","HoTen","DanToc","GioiTinh","DiaChi","NgaySinh","SoDT","MaCV","TenCV","MaPB","TenPhongBan","BacLuong","ButtonToolbar","show","deleteDep","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","to","App","path","component","exact","Post","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3905d80f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\nexport class AddDepModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // URL\r\n        //AUTO\r\n        let url = 'http://quanlyapi.somee.com/api/NhanVien?';\r\n        for (let key of Object.keys(event.target)) {\r\n            console.log(key, event.target[key])\r\n            url += `${event.target[key].name}=${event.target[key].value}&`\r\n        }\r\n\r\n        console.log(url)\r\n\r\n        // Fetch\r\n\r\n        // THen\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'aplication/json',\r\n            },\r\n            body: JSON.stringify({\r\n                maNv: event.target.maNv.value,\r\n                hoTen: event.target.hoTen.value,\r\n                danToc: event.target.danToc.value,\r\n                gioiTinh: event.target.gioiTinh.value,\r\n                diaChi: event.target.diaChi.value,\r\n                ngaySinh: event.target.ngaySinh.value,\r\n                soDT: event.target.soDT.value,\r\n                maCv: event.target.maCv.value,\r\n                maPb: event.target.maPb.value,\r\n                bacLuong: event.target.bacLuong.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result)\r\n            },\r\n                (error) => {\r\n                    alert('Failed')\r\n                })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Sửa Nhân Viên\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlID=\"maNv\">\r\n                                        <Form.Control type=\"number\" name=\"maNv\" required placeholder=\"Mã Nhân Viên\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"hoTen\" required placeholder=\"Họ và Tên\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"danToc\" required placeholder=\"Dân tộc\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"gioiTinh\" required placeholder=\"Giới Tính\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"diaChi\" required placeholder=\"Địa Chỉ\"></Form.Control>\r\n                                        <Form.Control type=\"date\" name=\"ngaySinh\" required placeholder=\"Ngày Sinh\"></Form.Control>\r\n                                        <Form.Control type=\"number\" name=\"soDT\" required placeholder=\"Số điện thoại\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"maCv\" required placeholder=\"Mã Chức vụ\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"maPb\" required placeholder=\"Mã Phòng Ban\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"bacLuong\" required placeholder=\"Bậc Lương\"></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">Thêm</Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\n\r\nexport class Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // URL\r\n        //AUTO\r\n        let url = 'http://quanlyapi.somee.com/api/NhanVien?';\r\n        for (let key of Object.keys(event.target)) {\r\n            console.log(key, event.target[key])\r\n            url += `${event.target[key].name}=${event.target[key].value}&`\r\n        }\r\n\r\n        console.log(url)\r\n\r\n        // Fetch\r\n\r\n        // THen\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'aplication/json',\r\n            },\r\n            body: JSON.stringify({\r\n                maNv: event.target.maNv.value,\r\n                hoTen: event.target.hoTen.value,\r\n                danToc: event.target.danToc.value,\r\n                gioiTinh: event.target.gioiTinh.value,\r\n                diaChi: event.target.diaChi.value,\r\n                ngaySinh: event.target.ngaySinh.value,\r\n                soDT: event.target.soDT.value,\r\n                maCv: event.target.maCv.value,\r\n                maPb: event.target.maPb.value,\r\n                bacLuong: event.target.bacLuong.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result)\r\n            },\r\n                (error) => {\r\n                    alert('Failed')\r\n                })\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Sửa nhân viên\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlID=\"maNv\">\r\n                                        <Form.Control type=\"number\" name=\"maNv\" required disabled defaultValue={this.props.depmaNv} placeholder=\"Mã Nhân Viên\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"hoTen\" required defaultValue={this.props.dephoTen} placeholder=\"Họ và Tên\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"danToc\" required defaultValue={this.props.depdanToc} placeholder=\"Dân tộc\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"gioiTinh\" required defaultValue={this.props.depgioiTinh} placeholder=\"Giới Tính\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"diaChi\" required defaultValue={this.props.depdiaChi} placeholder=\"Địa Chỉ\"></Form.Control>\r\n                                        <Form.Control type=\"date\" name=\"ngaySinh\" required defaultValue={this.props.depngaySinh} placeholder=\"Ngày Sinh\"></Form.Control>\r\n                                        <Form.Control type=\"number\" name=\"soDT\" requireddefaultValue={this.props.depsoDT} placeholder=\"Số điện thoại\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"maCv\" required defaultValue={this.props.depmaCv} placeholder=\"Mã Chức vụ\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"maPb\" required defaultValue={this.props.depmaPb} placeholder=\"Mã Phòng Ban\"></Form.Control>\r\n                                        <Form.Control type=\"text\" name=\"bacLuong\" required defaultValue={this.props.depbacLuong} placeholder=\"Bậc Lương\"></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">Sửa</Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddDepModal } from './AddDepModal';\r\nimport { Edit } from './Edit';\r\n\r\nexport class Get extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { deps: [], addModalShow: false, editModalShow: false }\r\n    }\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList() {\r\n        fetch('http://quanlyapi.somee.com/api/NhanVien')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ deps: data })\r\n            });\r\n    }\r\n    componentDidUpdate() {\r\n        this.refreshList()\r\n    }\r\n\r\n    deleteDep(depmaNv) {\r\n        if (window.confirm('Bạn có chắc xóa người này?')) {\r\n            fetch('http://quanlyapi.somee.com/api/NhanVien?maNv=' + depmaNv, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Accept': 'applicontion/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { deps, depmaNv, dephoTen, depdanToc, depgioiTinh, depdiaChi, depngaySinh, depsoDT, depmaCv, depmaPb, depbacLuong } = this.state;\r\n        let addModalClose = () => this.setState({ addModalShow: false });\r\n        let editModalClose = () => this.setState({ editModalShow: false })\r\n        return (\r\n            <div>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Mã Nhân Viên</th>\r\n                            <th>Họ Tên</th>\r\n                            <th>Dân Tộc</th>\r\n                            <th>Giới Tính</th>\r\n                            <th>Địa Chỉ</th>\r\n                            <th>Ngày Sinh</th>\r\n                            <th>Số Điện Thoại</th>\r\n                            <th>Mã Chức Vụ</th>\r\n                            <th>Tên Chức vụ</th>\r\n                            <th>Mã Phòng Ban</th>\r\n                            <th>Tên Phòng Ban</th>\r\n                            <th>Bậc Luong</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {deps.map(dep =>\r\n                            <tr key={dep.MaNv}>\r\n                                <td>{dep.MaNv}</td>\r\n                                <td>{dep.HoTen}</td>\r\n                                <td>{dep.DanToc}</td>\r\n                                <td>{dep.GioiTinh}</td>\r\n                                <td>{dep.DiaChi}</td>\r\n                                <td>{dep.NgaySinh}</td>\r\n                                <td>{dep.SoDT}</td>\r\n                                <td>{dep.MaCV}</td>\r\n                                <td>{dep.TenCV}</td>\r\n                                <td>{dep.MaPB}</td>\r\n                                <td>{dep.TenPhongBan}</td>\r\n                                <td>{dep.BacLuong}</td>\r\n                                <td>\r\n                                    <ButtonToolbar>\r\n                                        <Button className=\"mr-2\" variant=\"info\" onClick={() => this.setState({ editModalShow: true, depmaNv: dep.MaNv, dephoTen: dep.HoTen, depdanToc: dep.DanToc, depgioiTinh: dep.GioiTinh, depdiaChi: dep.DiaChi, depngaySinh: dep.NgaySinh, depsoDT: dep.SoDT, depmaCv: dep.MaCV, depmaPb: dep.MaPB, depbacLuong: dep.BacLuong })}>Sửa</Button>\r\n                                        <Edit\r\n                                            show={this.state.editModalShow}\r\n                                            onHide={editModalClose}\r\n                                            depmaNv={depmaNv}\r\n                                            dephoTen={dephoTen}\r\n                                            depdanToc={depdanToc}\r\n                                            depgioiTinh={depgioiTinh}\r\n                                            depdiaChi={depdiaChi}\r\n                                            depngaySinh={depngaySinh}\r\n                                            depsoDT={depsoDT}\r\n                                            depmaCv={depmaCv}\r\n                                            depmaPb={depmaPb}\r\n                                            depbacLuong={depbacLuong}\r\n                                        />\r\n                                        <Button className=\"mr-2\"\r\n                                        onClick={()=>this.deleteDep(dep.MaNv)} variant=\"danger\"\r\n                                        >Delete</Button>\r\n                                    </ButtonToolbar>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </Table>\r\n                <ButtonToolbar>\r\n                    <Button variant=\"primary\" onClick={() => this.setState({ addModalShow: true })}>\r\n                        Thêm\r\n                    </Button>\r\n                    <AddDepModal show={this.state.addModalShow} onHide={addModalClose} />\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" expand=\"lg\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <NavLink className=\"d-inline p-2 bg-dark text-white\"\r\n                        to=\"/\">Quản Lý nhân viên</NavLink>\r\n                        <NavLink className=\"d-inline p-2 bg-dark text-white\"\r\n                        to=\"/post\">Thêm Nhân Viên</NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport { Post } from './components/Post';\nimport { Get } from './components/Get';\nimport {Navigation} from './components/Navigation'\n\nimport { Button } from \"react-bootstrap\";\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"\">\n        <h1 className=\"text-center p-5\">Quản Lý Nhân Viên</h1>\n      <Navigation></Navigation>\n        <Switch>\n          <Route path='/' component={Get} exact></Route>\n          <Route path='/post' component={Post} exact></Route>\n\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}